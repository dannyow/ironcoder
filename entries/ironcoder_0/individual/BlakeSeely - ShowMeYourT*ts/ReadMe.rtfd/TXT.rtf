{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf330
{\fonttbl\f0\fswiss\fcharset77 Helvetica;\f1\fswiss\fcharset77 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww13940\viewh11500\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\qc\pardirnatural

\f0\fs24 \cf0 {{\NeXTGraphic Pasted Graphic.tiff \width2560 \height2560
}¬}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\qc\pardirnatural

\fs36 \cf0 ShowMeYourT*ts!
\fs24 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural
\cf0 \
Author: Blake Seely\
Email: blakeseely@mac.com\
\
I may be the only entry with a complete physics model for beaded necklaces - but I hope I'm not the only entry with zero Accessibility API code!\
\

\f1\b The Concept
\f0\b0 : The application was supposed to throw strings of beads across the screen. Then, using the Accessibility API, hit-detect the important UI elements of the frontmost application - windows, buttons, menus, etc. As the beads flew by, they would get caught on those elements like so many Bourbon St. light posts. \
\
Unfortunately, after getting the fluid physics down, there was some serious issues with trying to 
\f1\b stop
\f0\b0  that dynamic motion :) So, I stripped out the hit detection and Accessibility stuff, and here's your result - a series of beads flung across your screen that can entertain for hours. There's a bit of randomness for the initial velocity of each bead on each necklace, causing some of them to just look like a jumbled mess, but the longer they're on screen, the more they should stretch themselves out!\
\
Clearly not a winner, but hey, it was fun!\
\
-Blake\
}