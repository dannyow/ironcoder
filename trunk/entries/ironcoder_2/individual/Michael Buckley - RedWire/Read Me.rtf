{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf410
{\fonttbl\f0\fswiss\fcharset77 Helvetica-Bold;\f1\fswiss\fcharset77 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs24 \cf0 RedWire\

\f1\b0 By Michael Buckley <thebuckley@gmail.com>\
\
Redwire is a game of random chance where the goal is to disable a time bomb in less than 30 seconds. You start the game using the "New Game" menu item in the File menu, and play by pressing the numbers 1 through 6, which corresponds to a wire being removed. If only one wire remains without the bomb exploding, you win, otherwise, you get blown up.\
\
At least that's the theory. In practice, the game functions only on the simplest level, due to the fact that I'm very new to Cocoa (and for that matter, programming in general), and haven't touched CoreGraphics at all, most of my time was spent reading the documentation and experimenting. Therefore, while the game works, it's not that impressive. The "explosion" just turns your screen white, I didn't have time to implement animations of the wires being cut or the numbering of the wires, and I had to skip a few other things I wanted. The wire corresponding to the number 1 is on the topmost layer, the wire corresponding to 2 is on the next layer, etc., but it's impossible tell the exact ordering of the wires from the graphical representation.\
\
Still though, this was a fantastic learning experience from me, both in terms of general Cocoa programming and as a crash corse in CoreGraphics. No doubt this will be totally outshined by the other entries, and normally, this is the kind of thing that I wouldn't submit, being of value to myself, but not much to others. Still, considering the number of entries the previous Iron Coder had, I figured it wouldn't hurt to increase the volume of entries for this one.}