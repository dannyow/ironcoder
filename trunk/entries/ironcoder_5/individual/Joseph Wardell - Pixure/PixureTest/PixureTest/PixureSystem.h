//
//  PixureSystem.h
//  PixureTest
//
//  Created by Joseph Wardell on 3/30/07.
//  Copyright 2007 Old Jewel Software. All rights reserved.
//

#import <Cocoa/Cocoa.h>

@class PixurePopulation;
@class PixureImage;
@class Pixure;

/*
Pixelsystem - runs the population through its genetic algorithm - 
main method is advanceGenerations:(unsigned int)generationCount 
which iterates a number of generations and then returns, 
also acts as the topmost object for controllers to communicate to, 
and offers a pixureImage method that returns the image created by the population of pixures

*/

@interface PixureSystem : NSObject {
	PixurePopulation* population;
	PixureImage* image;
	
//	float tolerance;
	
	unsigned int generationCount;
	unsigned int lastPopulationLoss;
	
	NSLock* drawingLock;
}

- (id)initWithImage:(NSImage*)inImage;


// source image accessors
- (PixureImage*)sourceImage;
- (void)setSourceImage:(PixureImage*)inPixureImage;

- (NSImage*)image;
- (void)setImage:(NSImage*)inImage;

// the current tolerance level that we're looking for
//- (float)tolerance;

// convenience accessors
- (unsigned int)numberOfRows;
- (unsigned int)numberOfColumns;
- (unsigned int)numberOfPixures;


// return the number of generations passed
- (unsigned int) generationCount;

// return the image generated by the population of pixures
- (NSImage*)generatedImage;

// advance the population several generations
// this is the meat of the genetic algorithm
- (void)advanceGenerations:(unsigned int)inGenerationCount;

// as above, but advance one at a time
//#warning probably doesn't need to be public...
- (void)advanceOneGeneration;


@end
